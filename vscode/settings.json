{
  // workbench settings
  "workbench.colorTheme": "Ayu Dark Bordered",
  "workbench.iconTheme": "moxer-icons",
  "workbench.layoutControl.enabled": false,
  "workbench.editor.tabActionCloseVisibility": false,
  "workbench.activityBar.orientation": "vertical", // modification for cursor only
  "workbench.startupEditor": "none",
  "workbench.tips.enabled": false,
  // security
  "security.workspace.trust.untrustedFiles": "open",
  // editor settings
  "editor.fontFamily": "FiraCode-Retina",
  "editor.fontLigatures": true,
  "editor.scrollBeyondLastLine": false,
  "editor.bracketPairColorization.enabled": false,
  "editor.formatOnSave": true,
  "editor.linkedEditing": true,
  // editor ui settings
  "editor.minimap.enabled": false,
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.smoothScrolling": true,
  "editor.cursorBlinking": "phase",
  // misc ui settings
  "window.commandCenter": false,
  "explorer.openEditors.visible": 1,
  "breadcrumbs.enabled": false,
  //terminal
  "terminal.integrated.fontFamily": "FiraCode-Retina",
  // apc
  "apc.font.family": "GeistMonoVariable-Medium",
  "apc.activityBar": {
    "position": "bottom",
    "hideSettings": true,
    "size": 30
  },
  "apc.statusBar": {
    "position": "editor-bottom",
    "height": 30,
    "fontSize": 12
  },
  "apc.header": {
    "height": 34,
    "fontSize": 13
  },
  "apc.listRow": {
    "height": 22,
    "fontSize": 13
  },
  // language settings
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 2
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 2
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 2
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 2
  },
  "[solidity]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 2
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 2
  },
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer",
    "editor.tabSize": 4,
    "editor.inlayHints.enabled": "offUnlessPressed"
  },
  "[python]": {
    "editor.tabSize": 4
  },
  "[terraform]": {
    "editor.tabSize": 2
  },
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma"
  },
  // plugins settings
  "prettier.singleQuote": true,
  "prettier.printWidth": 120,
  "rust-analyzer.procMacro.enable": true,
  "material-icon-theme.activeIconPack": "nest",
  "material-icon-theme.hidesExplorerArrows": true,
  // vscode vim settings
  "vim.useSystemClipboard": true,
  "vim.cursorStylePerMode.insert": "line",
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["J"],
      "after": ["5", "j"]
    },
    {
      "before": ["K"],
      "after": ["5", "k"]
    },
    {
      "before": ["<C-h>"],
      "after": ["<C-w>", "h"]
    },
    {
      "before": ["<C-j>"],
      "after": ["<C-w>", "j"]
    },
    {
      "before": ["<C-k>"],
      "after": ["<C-w>", "k"]
    },
    {
      "before": ["<C-l>"],
      "after": ["<C-w>", "l"]
    },
    // for deleting without copying to the clipboard
    {
      "before": ["d"],
      "after": ["\"", "_", "d"]
    },
    {
      "before": ["D"],
      "after": ["\"", "_", "D"]
    },
    {
      "before": ["d", "d"],
      "after": ["\"", "_", "d", "d"]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["d"],
      "after": ["\"", "_", "d"]
    }
  ],
  // allows pasting in visual mode without overwriting the register
  "vim.visualModeKeyBindings": [
    {
      "before": ["p"],
      "after": ["P"]
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "k"],
      "after": ["<ESC>"]
    },
    {
      "before": ["J", "K"],
      "after": ["<ESC>"]
    }
  ],
  "vim.handleKeys": {
    "<D-c>": false
  },
  // misc settings
  "telemetry.telemetryLevel": "off",
  "html.hover.references": false,
  // misc language settings
  "typescript.preferences.importModuleSpecifier": "shortest",
  "javascript.preferences.importModuleSpecifier": "relative",
  "solidity.defaultCompiler": "localNodeModule",
  "json.format.enable": false,
  "rust-analyzer.rustfmt.rangeFormatting.enable": true,
  "dart.debugExternalPackageLibraries": false,
  "dart.debugSdkLibraries": false,
  "git.autofetch": true
}
